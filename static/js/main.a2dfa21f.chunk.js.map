{"version":3,"sources":["components/header.jsx","components/footer.jsx","store/action.js","api-actions.js","api.js","components/list-ltem.jsx","components/form.jsx","components/list.jsx","components/post.jsx","browser-history.js","App.js","store/rootReducer.js","index.js"],"names":["Header","className","Footer","ActionType","ActionCreator","payload","type","fetchComments","id","dispatch","axios","get","then","response","data","getComments","fetchPost","getPost","fetchDeletePost","delete","deletePost","status","fetchAddNewPost","name","email","message","post","addPost","newData","fetchAddNewComment","put","addComment","fetchDeleteComment","deleteComment","connect","state","combinedData","length","size","map","to","title","onClick","activeComments","handleSendBtn","handleSendBtnMessage","useState","setName","setEmail","setMessage","htmlFor","required","onChange","evt","target","value","preventDefault","alert","gotPosts","div","activePost","combinedPost","handleDeleteComment","param","useEffect","body","comment","history","createBrowserHistory","App","basename","Fragment","exact","path","render","match","params","initialState","posts","formId","users","actualComments","store","createStore","action","Object","assign","slice","filter","user","find","composeWithDevTools","applyMiddleware","thunk","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2dfa21f.chunk.js","sourcesContent":["function Header() {\r\n\r\n    return <header className=\"header\">\r\n        <div className=\"header__inner\">\r\n            <h1 className=\"header__title\">\r\n                Header\r\n            </h1>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","function Footer() {\r\n\r\n    return <footer className=\"footer\">\r\n        <div className=\"footer__inner\">\r\n            <h1 className=\"footer__title\">\r\n                Footer\r\n            </h1>\r\n        </div>\r\n    </footer>\r\n}\r\n\r\nexport default Footer","const ActionType = {\r\n  UPDATE_POSTS: \"UPDATE_POSTS\",\r\n  GOT_POSTS: \"GOT_POSTS\",\r\n  GET_USERS: \"GET_USERS\",\r\n  SAVE_POST: \"SAVE_POST\",\r\n  SAVE_COMMENTS: \"SAVE_COMMENTS\",\r\n  DELETE_POST: \"DELETE_POST\",\r\n  DELETE_COMMENT: \"DELETE_COMMENT\",\r\n  CHANGE_NAME: \"CHANGE_NAME\",\r\n  CHANGE_EMAIL: \"CHANGE_EMAIL\",\r\n  CHANGE_MESSAGE: \"CHANGE_MESSAGE\",\r\n  SEND_BTN: \"SEND_BTN\",\r\n  GENERATE_ID: \"GENERATE_ID\",\r\n  SEND_BTN_MESSAGE: \"SEND_BTN_MESSAGE\",\r\n  GENERATE_ID_MESSAGE: \"GENERATE_ID_MESSAGE\",\r\n  COMBINE_DATA: \"COMBINE_DATA\",\r\n  GET_COMMENTS: \"GET_COMMENTS\",\r\n  GET_ACTUAL_COMMENTS: \"GET_ACTUAL_COMMENTS\",\r\n  COMBINE_POST: \"COMBINE_POST\",\r\n};\r\n\r\nconst ActionCreator = {\r\n  updatePosts: (payload) => ({\r\n    type: ActionType.UPDATE_POSTS,\r\n    payload,\r\n  }),\r\n  gotPosts: () => ({\r\n    type: ActionType.GOT_POSTS,\r\n  }),\r\n  savePost: (payload) => ({\r\n    type: ActionType.SAVE_POST,\r\n    payload,\r\n  }),\r\n  deletePost: (payload) => ({\r\n    type: ActionType.DELETE_POST,\r\n    payload,\r\n  }),\r\n  deleteComment: (payload) => ({\r\n    type: ActionType.DELETE_COMMENT,\r\n    payload,\r\n  }),\r\n  handleName: (payload) => ({\r\n    type: ActionType.CHANGE_NAME,\r\n    payload,\r\n  }),\r\n  handleEmail: (payload) => ({\r\n    type: ActionType.CHANGE_EMAIL,\r\n    payload,\r\n  }),\r\n  handleMessage: (payload) => ({\r\n    type: ActionType.CHANGE_MESSAGE,\r\n    payload,\r\n  }),\r\n  handleSendBtn: (payload) => ({\r\n    type: ActionType.SEND_BTN,\r\n    payload,\r\n  }),\r\n  handleSendBtnMessage: (payload) => ({\r\n    type: ActionType.SEND_BTN_MESSAGE,\r\n    payload,\r\n  }),\r\n  generateId: () => ({\r\n    type: ActionType.GENERATE_ID,\r\n  }),\r\n  generateIdMessage: () => ({\r\n    type: ActionType.GENERATE_ID_MESSAGE,\r\n  }),\r\n  getUsers: (payload) => ({\r\n    type: ActionType.GET_USERS,\r\n    payload,\r\n  }),\r\n  combineData: () => ({\r\n    type: ActionType.COMBINE_DATA,\r\n  }),\r\n  getComments: (payload) => ({\r\n    type: ActionType.GET_COMMENTS,\r\n    payload,\r\n  }),\r\n  getActualComments: (payload) => ({\r\n    type: ActionType.GET_ACTUAL_COMMENTS,\r\n    payload,\r\n  }),\r\n  combinePost: () => ({\r\n    type: ActionType.COMBINE_POST,\r\n  }),\r\n};\r\n\r\nexport { ActionCreator, ActionType };\r\n","import {\r\n  getPosts,\r\n  getUsers,\r\n  getComments,\r\n  getPost,\r\n  deletePost,\r\n  addPost,\r\n  addComment,\r\n  deleteComment\r\n} from \"./api\";\r\nimport { ActionCreator } from \"./store/action\";\r\n\r\nexport const fetchPosts = () => (dispatch) => {\r\n  return getPosts()\r\n    .then((response) => {\r\n      dispatch(ActionCreator.updatePosts(response));\r\n    })\r\n    .then(() => {\r\n      dispatch(ActionCreator.gotPosts());\r\n    });\r\n};\r\n\r\nexport const fetchUsers = () => (dispatch) => {\r\n  return getUsers().then((response) => {\r\n    dispatch(ActionCreator.getUsers(response));\r\n  });\r\n};\r\n\r\nexport const fetchComments = (id) => (dispatch) => {\r\n  getComments(id).then((response) => {\r\n    dispatch(ActionCreator.getComments(response));\r\n  });\r\n};\r\n\r\nexport const fetchPost = (id) => (dispatch) => {\r\n  getPost(id)\r\n    .then((response) => {\r\n      dispatch(ActionCreator.savePost(response));\r\n    })\r\n    .then(() => {\r\n      dispatch(ActionCreator.combinePost());\r\n    });\r\n};\r\n\r\nexport const fetchDeletePost = (id) => (dispatch) => {\r\n  deletePost(id).then((response) => {\r\n    if (response.status === 200) {\r\n      dispatch(ActionCreator.deletePost(id));\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchAddNewPost = (data) => (dispatch) => {\r\n  addPost(data).then((newData) => {\r\n    dispatch(ActionCreator.handleSendBtn(newData));\r\n  });\r\n};\r\n\r\nexport const fetchAddNewComment = (data) => (dispatch) => {\r\n  addComment(data).then((newData) => {\r\n    dispatch(ActionCreator.handleSendBtnMessage(newData));\r\n  });\r\n};\r\n\r\nexport const fetchDeleteComment = (id) => (dispatch) => {\r\n  deleteComment(id).then(() => {\r\n    dispatch(ActionCreator.deleteComment(id));\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport function getPosts() {\r\n  return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport function getUsers() {\r\n  return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport function getComments(id) {\r\n  return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/posts/\" + id + \"/comments\")\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport function getPost(id) {\r\n  return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/posts/\" + id)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport function deletePost(id) {\r\n  return axios.delete(\"https://jsonplaceholder.typicode.com/posts/\" + id);\r\n}\r\n\r\nexport function deleteComment(id) {\r\n  return axios.delete(\"https://jsonplaceholder.typicode.com/comments/\" + id);\r\n}\r\n\r\nexport function addPost({ name, email, message }) {\r\n  return axios\r\n    .post(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      name,\r\n      email,\r\n      message,\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport function addComment({ name, email, message }) {\r\n  return axios\r\n    .put(\"https://jsonplaceholder.typicode.com/posts/1\", {\r\n      name,\r\n      email,\r\n      message,\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { fetchDeletePost } from \"../api-actions\"\r\n\r\nfunction ListItem({ combinedData, deletePost }) {\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"list__items\">\r\n                {!combinedData.length ? <li className=\"list__loader\"><BeatLoader size={92} /></li> : null}\r\n                {combinedData.map(post => {\r\n                    return <li className=\"list__item\" key={post.id}>\r\n                        <NavLink to={\"post/\" + post.id} className=\"list__link\">\r\n                            <span className=\"list__title\">{post.name}</span>\r\n                            <p className=\"list__about\">{post.title}</p>\r\n                        </NavLink>\r\n                        <button className=\"list__btn\" onClick={() => { deletePost(post.id) }}>X</button>\r\n                    </li>\r\n                })}\r\n            </ul >\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapToStateProps = (state) => ({\r\n    combinedData: state.combinedData\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deletePost(id) {\r\n        dispatch(fetchDeletePost(id))\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapToStateProps, mapDispatchToProps)(ListItem);","import React, { useRef, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchAddNewPost, fetchAddNewComment } from \"../api-actions\"\r\nimport { ActionCreator } from \"../store/action\"\r\n\r\nfunction Form({ handleSendBtn, activeComments, handleSendBtnMessage }) {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const onHaveChangeName = (evt) => {\r\n        setName(evt.target.value)\r\n    }\r\n    const onHaveChangeEmail = (evt) => {\r\n        setEmail(evt.target.value)\r\n    }\r\n    const onHaveChangeMessage = (evt) => {\r\n        setMessage(evt.target.value)\r\n    }\r\n\r\n    function handleSendBtnView(evt) {\r\n        evt.preventDefault()\r\n        if (name === \"\" || email === \"\" || message === \"\") {\r\n            alert('Enter text')\r\n        } else {\r\n            setName(\"\")\r\n            setEmail(\"\")\r\n            setMessage(\"\")\r\n            activeComments.length ? handleSendBtnMessage(name, email, message) : handleSendBtn(name, email, message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"list__wrapper\">\r\n            <label className=\"list__form-title\" htmlFor=\"name\">Name</label>\r\n            <input className=\"list__form-name\" id=\"name\" type=\"text\" required onChange={onHaveChangeName} value={name} />\r\n            <label className=\"list__form-title\" htmlFor=\"email\">Email</label>\r\n            <input className=\"list__form-email\" id=\"email\" type=\"email\" required onChange={onHaveChangeEmail} value={email} />\r\n            <label className=\"list__form-title\" htmlFor=\"message\">Message</label>\r\n            <textarea className=\"list__form-text\" id=\"message\" required onChange={onHaveChangeMessage} value={message} />\r\n            <button type=\"button\" className=\"list__addBtn\" onClick={handleSendBtnView}  >Add new</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    activeComments: state.activeComments\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleSendBtn(name, email, message) {\r\n        dispatch(fetchAddNewPost({ name, email, message }))\r\n    },\r\n    handleSendBtnMessage(name, email, message) {\r\n        dispatch(ActionCreator.generateIdMessage())\r\n        dispatch(fetchAddNewComment({ name, email, message }))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)","\r\nimport { connect } from \"react-redux\";\r\nimport ListItem from \"./list-ltem\";\r\nimport Form from \"./form\"\r\n\r\nfunction List({ gotPosts }) {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"list\">\r\n                <div div className=\"list__inner\" >\r\n                    {gotPosts ? <ListItem /> : <p> No Posts</p>}\r\n                    <Form />\r\n                </div>\r\n            </section >\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapToStateProps = (state) => ({\r\n    gotPosts: state.gotPosts,\r\n})\r\n\r\nexport default connect(mapToStateProps)(List);","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Form from \"./form\"\r\nimport { BeatLoader } from \"react-spinners\"\r\nimport { fetchComments, fetchPost, fetchDeleteComment } from \"../api-actions\";\r\n\r\nfunction Post({ param, activeComments, fetchComments, fetchPost, combinedPost, handleDeleteComment }) {\r\n\r\n    useEffect(() => {\r\n        fetchComments(param)\r\n        fetchPost(param)\r\n    }, [])\r\n\r\n\r\n    return <div className=\"post\">\r\n        <div className=\"post__inner\">\r\n            <div className=\"post__main\">\r\n                <h2 className=\"post__title\">POST:</h2>\r\n                <p className=\"post__author\"><pre>{`Name: \r\n                `}</pre>{combinedPost.name}</p>\r\n                <span className=\"post__email\"><pre>{`Email: \r\n                `}</pre> {combinedPost.email}</span>\r\n                <p className=\"post__text\"><pre>{`Message: \r\n                `}</pre> {combinedPost.body}</p>\r\n            </div>\r\n            <div className=\"post__comments\">\r\n                <h2 className=\"post__title\">COMMENTS:</h2>\r\n                <ul className=\"post__list\">\r\n                    {!activeComments.length ? <li className=\"post__loader\"><BeatLoader size={92} /></li> : null}\r\n                    {activeComments.map(comment => {\r\n                        return <li className=\"post__item\" key={comment.id}>\r\n                            <p className=\"post__item-author\">{comment.name}</p>\r\n                            <span className=\"post__item-email\">{comment.email}</span>\r\n                            <p className=\"post__item-text\">{comment.body}</p>\r\n                            <button className=\"post__btn\" onClick={() => { handleDeleteComment(comment.id) }}>X</button>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <Form />\r\n        </div>\r\n    </div >\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    activePost: state.activePost,\r\n    activeComments: state.activeComments,\r\n    combinedPost: state.combinedPost\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleDeleteComment(id) {\r\n        dispatch(fetchDeleteComment(id))\r\n    },\r\n    fetchComments(id) {\r\n        dispatch(fetchComments(id))\r\n    },\r\n    fetchPost(id) {\r\n        dispatch(fetchPost(id))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)","import {createBrowserHistory} from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import \"./style.css\";\nimport React from \"react\";\nimport { Router, Route, HashRouter } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport List from \"./components/list\";\nimport Post from \"./components/post\";\nimport history from \"./browser-history\";\n\nfunction App() {\n  return (\n    <HashRouter basename={'/serhiog.github.io'}>\n      <React.Fragment>\n        <Router history={history}>\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <List />;\n            }}\n          />\n          <Route\n            exact\n            path={\"/post/:id\"}\n            render={({ match }) => {\n              return <Post param={match.params.id} />;\n            }}\n          />\n          <Footer />\n        </Router>\n      </React.Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ActionType } from \"./action\";\r\n\r\nconst initialState = {\r\n  gotPosts: false,\r\n  posts: [],\r\n  activePost: {},\r\n  activeComments: [],\r\n  formId: \"\",\r\n  users: [],\r\n  combinedData: [],\r\n  actualComments: [],\r\n  combinedPost: {},\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.UPDATE_POSTS:\r\n      return Object.assign({}, state, { posts: action.payload.slice(0, 10) });\r\n    case ActionType.SAVE_POST:\r\n      return Object.assign({}, state, { activePost: action.payload });\r\n    case ActionType.GOT_POSTS:\r\n      return Object.assign({}, state, { gotPosts: true });\r\n    case ActionType.SAVE_COMMENTS:\r\n      return Object.assign({}, state, { activeComments: action.payload });\r\n    case ActionType.DELETE_POST:\r\n      return Object.assign({}, state, {\r\n        combinedData: state.combinedData.filter((post) => {\r\n          return post.id !== action.payload;\r\n        }),\r\n      });\r\n    case ActionType.DELETE_COMMENT:\r\n      return Object.assign({}, state, {\r\n        activeComments: state.activeComments.filter((comment) => {\r\n          return comment.id !== action.payload;\r\n        }),\r\n      });\r\n    case ActionType.SEND_BTN:\r\n      return Object.assign({}, state, {\r\n        combinedData: [\r\n          ...state.combinedData,\r\n          {\r\n            name: action.payload.name,\r\n            email: action.payload.email,\r\n            body: action.payload.message,\r\n            id: action.payload.id,\r\n            title: action.payload.email,\r\n          },\r\n        ],\r\n      });\r\n    case ActionType.SEND_BTN_MESSAGE:\r\n      return Object.assign({}, state, {\r\n        activeComments: [\r\n          ...state.activeComments,\r\n          {\r\n            name: action.payload.name,\r\n            email: action.payload.email,\r\n            body: action.payload.message,\r\n            id: state.formId,\r\n            title: action.payload.email,\r\n          },\r\n        ],\r\n      });\r\n    case ActionType.GENERATE_ID_MESSAGE:\r\n      return Object.assign({}, state, {\r\n        formId: state.activeComments[state.activeComments.length - 1].id + 1,\r\n      });\r\n    case ActionType.GET_USERS:\r\n      return Object.assign({}, state, {\r\n        users: action.payload,\r\n      });\r\n    case ActionType.COMBINE_DATA:\r\n      return Object.assign({}, state, {\r\n        combinedData: state.posts.map((post) => {\r\n          const user = state.users.find((user) => user.id === post.id);\r\n          return Object.assign(\r\n            {},\r\n            post,\r\n            { name: user.name },\r\n            { email: user.email }\r\n          );\r\n        }),\r\n      });\r\n    case ActionType.GET_COMMENTS:\r\n      return Object.assign({}, state, {\r\n        activeComments: action.payload,\r\n      });\r\n    case ActionType.COMBINE_POST:\r\n      return Object.assign({}, state, {\r\n        combinedPost: Object.assign(\r\n          {},\r\n          state.activePost,\r\n          state.users.find((user) => {\r\n            return user.id === state.activePost.id;\r\n          })\r\n        ),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { rootReducer };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./store/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { fetchPosts, fetchUsers } from \"./api-actions\";\nimport { ActionCreator } from \"./store/action\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nPromise.all([store.dispatch(fetchPosts()), store.dispatch(fetchUsers())])\n  .then(() => {\n    store.dispatch(ActionCreator.combineData());\n  })\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  });\n"],"sourceRoot":""}